# This is an Ansible version of what "pveceph install" actually does
---
- block:
    - name: Install custom Ceph systemd service
      copy:
        src: /usr/share/doc/pve-manager/examples/ceph.service
        dest: /etc/systemd/system/ceph.service
        remote_src: true
        owner: root
        group: root
        mode: preserve
      notify: 'restart ceph'

    - name: Enable Ceph
      systemd:
        name: ceph.service
        enabled: true
  when:
    - "ansible_distribution_release == 'stretch'"

- block:
    - name: Create initial Ceph config
      command: "pveceph init --network {{ pve_ceph_network }}  \
      {% if pve_ceph_cluster_network is defined  %} \
                  --cluster-network {{ pve_ceph_cluster_network }}
      {% endif %}"
      args:
        creates: /etc/ceph/ceph.conf

    - name: Create initial Ceph monitor
      command: 'pveceph mon create'
      args:
        creates: '/var/lib/ceph/mon/ceph-{{ ansible_hostname }}/'
      register: _ceph_initial_mon

    - name: Fail if initial monitor creation failed
      fail:
        msg: 'Ceph intial monitor creation failed.'
      when: _ceph_initial_mon is failed
  when: "inventory_hostname == groups[pve_ceph_mon_group][0]"

- name: Create additional Ceph monitors
  command: 'pveceph mon create'
  args:
    creates: '/var/lib/ceph/mon/ceph-{{ ansible_hostname }}/'
  when: "inventory_hostname != groups[pve_ceph_mon_group][0]"

- name: "Manage OSDs"
  include_tasks: ceph_osd.yml
  args:
    apply:
      tags:
        - create_osd
        - ceph_volume
  loop: "{{ pve_ceph_osds }}"
  loop_control:
    loop_var: _pve_ceph_osd_item

- name: "Manage Crush Rules"
  include_tasks: ceph_crushrules.yml
  args:
    apply:
      tags:
        - create_crushrules
  when: "inventory_hostname == groups[pve_ceph_mon_group][0]"

- name: Create Ceph MDS servers
  command: pveceph mds create
  args:
    creates: '/var/lib/ceph/mds/ceph-{{ ansible_hostname }}'
  register: _ceph_mds_create
  when: "inventory_hostname in groups[pve_ceph_mds_group] and pve_ceph_fs|length"

- name: Wait for standby MDS
  command: ceph mds stat -f json
  register: _ceph_mds_stat
  until: '(_ceph_mds_stat.stdout | from_json).fsmap.standbys | length'
  retries: 10
  delay: 2
  when: "_ceph_mds_create is changed"

- name: "Manage CephFS"
  include_tasks: ceph_fs.yml
  args:
    apply:
      tags:
        - create_cephfs
